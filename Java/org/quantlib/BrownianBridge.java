/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

public class BrownianBridge {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected BrownianBridge(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BrownianBridge obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        QuantLibJNI.delete_BrownianBridge(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public BrownianBridge(long steps) {
    this(QuantLibJNI.new_BrownianBridge__SWIG_0(steps), true);
  }

  public BrownianBridge(DoubleVector times) {
    this(QuantLibJNI.new_BrownianBridge__SWIG_1(DoubleVector.getCPtr(times), times), true);
  }

  public BrownianBridge(TimeGrid timeGrid) {
    this(QuantLibJNI.new_BrownianBridge__SWIG_2(TimeGrid.getCPtr(timeGrid), timeGrid), true);
  }

  public long size() {
    return QuantLibJNI.BrownianBridge_size(swigCPtr, this);
  }

  public DoubleVector times() {
    return new DoubleVector(QuantLibJNI.BrownianBridge_times(swigCPtr, this), true);
  }

  public DoubleVector leftWeight() {
    return new DoubleVector(QuantLibJNI.BrownianBridge_leftWeight(swigCPtr, this), true);
  }

  public DoubleVector rightWeight() {
    return new DoubleVector(QuantLibJNI.BrownianBridge_rightWeight(swigCPtr, this), true);
  }

  public DoubleVector stdDeviation() {
    return new DoubleVector(QuantLibJNI.BrownianBridge_stdDeviation(swigCPtr, this), true);
  }

  public DoubleVector transform(DoubleVector input) {
    return new DoubleVector(QuantLibJNI.BrownianBridge_transform(swigCPtr, this, DoubleVector.getCPtr(input), input), true);
  }

  public UnsignedIntVector bridgeIndex() {
    return new UnsignedIntVector(QuantLibJNI.BrownianBridge_bridgeIndex(swigCPtr, this), true);
  }

  public UnsignedIntVector leftIndex() {
    return new UnsignedIntVector(QuantLibJNI.BrownianBridge_leftIndex(swigCPtr, this), true);
  }

  public UnsignedIntVector rightIndex() {
    return new UnsignedIntVector(QuantLibJNI.BrownianBridge_rightIndex(swigCPtr, this), true);
  }

}

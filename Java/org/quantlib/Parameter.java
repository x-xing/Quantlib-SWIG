/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

public class Parameter {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Parameter(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Parameter obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        QuantLibJNI.delete_Parameter(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Parameter() {
    this(QuantLibJNI.new_Parameter(), true);
  }

  public Array params() {
    return new Array(QuantLibJNI.Parameter_params(swigCPtr, this), false);
  }

  public void setParam(long i, double x) {
    QuantLibJNI.Parameter_setParam(swigCPtr, this, i, x);
  }

  public boolean testParams(Array params) {
    return QuantLibJNI.Parameter_testParams(swigCPtr, this, Array.getCPtr(params), params);
  }

  public long size() {
    return QuantLibJNI.Parameter_size(swigCPtr, this);
  }

  public double getValue(double t) {
    return QuantLibJNI.Parameter_getValue(swigCPtr, this, t);
  }

  public Constraint constraint() {
    return new Constraint(QuantLibJNI.Parameter_constraint(swigCPtr, this), false);
  }

}

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

public class DoubleBarrierOption extends Instrument {
  private transient long swigCPtr;

  protected DoubleBarrierOption(long cPtr, boolean cMemoryOwn) {
    super(QuantLibJNI.DoubleBarrierOption_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DoubleBarrierOption obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        QuantLibJNI.delete_DoubleBarrierOption(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public DoubleBarrierOption(DoubleBarrier.Type barrierType, double barrier_lo, double barrier_hi, double rebate, Payoff payoff, Exercise exercise) {
    this(QuantLibJNI.new_DoubleBarrierOption(barrierType.swigValue(), barrier_lo, barrier_hi, rebate, Payoff.getCPtr(payoff), payoff, Exercise.getCPtr(exercise), exercise), true);
  }

  public double delta() {
    return QuantLibJNI.DoubleBarrierOption_delta(swigCPtr, this);
  }

  public double gamma() {
    return QuantLibJNI.DoubleBarrierOption_gamma(swigCPtr, this);
  }

  public double theta() {
    return QuantLibJNI.DoubleBarrierOption_theta(swigCPtr, this);
  }

  public double thetaPerDay() {
    return QuantLibJNI.DoubleBarrierOption_thetaPerDay(swigCPtr, this);
  }

  public double vega() {
    return QuantLibJNI.DoubleBarrierOption_vega(swigCPtr, this);
  }

  public double rho() {
    return QuantLibJNI.DoubleBarrierOption_rho(swigCPtr, this);
  }

  public double dividendRho() {
    return QuantLibJNI.DoubleBarrierOption_dividendRho(swigCPtr, this);
  }

  public double strikeSensitivity() {
    return QuantLibJNI.DoubleBarrierOption_strikeSensitivity(swigCPtr, this);
  }

}

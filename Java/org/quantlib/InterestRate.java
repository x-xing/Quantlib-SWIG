/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

public class InterestRate {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected InterestRate(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(InterestRate obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        QuantLibJNI.delete_InterestRate(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public InterestRate() {
    this(QuantLibJNI.new_InterestRate__SWIG_0(), true);
  }

  public InterestRate(double r, DayCounter dc, Compounding comp, Frequency freq) {
    this(QuantLibJNI.new_InterestRate__SWIG_1(r, DayCounter.getCPtr(dc), dc, comp.swigValue(), freq.swigValue()), true);
  }

  public double rate() {
    return QuantLibJNI.InterestRate_rate(swigCPtr, this);
  }

  public DayCounter dayCounter() {
    return new DayCounter(QuantLibJNI.InterestRate_dayCounter(swigCPtr, this), true);
  }

  public Compounding compounding() {
    return Compounding.swigToEnum(QuantLibJNI.InterestRate_compounding(swigCPtr, this));
  }

  public Frequency frequency() {
    return Frequency.swigToEnum(QuantLibJNI.InterestRate_frequency(swigCPtr, this));
  }

  public double discountFactor(double t) {
    return QuantLibJNI.InterestRate_discountFactor__SWIG_0(swigCPtr, this, t);
  }

  public double discountFactor(Date d1, Date d2, Date refStart, Date refEnd) {
    return QuantLibJNI.InterestRate_discountFactor__SWIG_1(swigCPtr, this, Date.getCPtr(d1), d1, Date.getCPtr(d2), d2, Date.getCPtr(refStart), refStart, Date.getCPtr(refEnd), refEnd);
  }

  public double discountFactor(Date d1, Date d2, Date refStart) {
    return QuantLibJNI.InterestRate_discountFactor__SWIG_2(swigCPtr, this, Date.getCPtr(d1), d1, Date.getCPtr(d2), d2, Date.getCPtr(refStart), refStart);
  }

  public double discountFactor(Date d1, Date d2) {
    return QuantLibJNI.InterestRate_discountFactor__SWIG_3(swigCPtr, this, Date.getCPtr(d1), d1, Date.getCPtr(d2), d2);
  }

  public double compoundFactor(double t) {
    return QuantLibJNI.InterestRate_compoundFactor__SWIG_0(swigCPtr, this, t);
  }

  public double compoundFactor(Date d1, Date d2, Date refStart, Date refEnd) {
    return QuantLibJNI.InterestRate_compoundFactor__SWIG_1(swigCPtr, this, Date.getCPtr(d1), d1, Date.getCPtr(d2), d2, Date.getCPtr(refStart), refStart, Date.getCPtr(refEnd), refEnd);
  }

  public double compoundFactor(Date d1, Date d2, Date refStart) {
    return QuantLibJNI.InterestRate_compoundFactor__SWIG_2(swigCPtr, this, Date.getCPtr(d1), d1, Date.getCPtr(d2), d2, Date.getCPtr(refStart), refStart);
  }

  public double compoundFactor(Date d1, Date d2) {
    return QuantLibJNI.InterestRate_compoundFactor__SWIG_3(swigCPtr, this, Date.getCPtr(d1), d1, Date.getCPtr(d2), d2);
  }

  public static InterestRate impliedRate(double compound, DayCounter resultDC, Compounding comp, Frequency freq, double t) {
    return new InterestRate(QuantLibJNI.InterestRate_impliedRate__SWIG_0(compound, DayCounter.getCPtr(resultDC), resultDC, comp.swigValue(), freq.swigValue(), t), true);
  }

  public static InterestRate impliedRate(double compound, DayCounter resultDC, Compounding comp, Frequency freq, Date d1, Date d2, Date refStart, Date refEnd) {
    return new InterestRate(QuantLibJNI.InterestRate_impliedRate__SWIG_1(compound, DayCounter.getCPtr(resultDC), resultDC, comp.swigValue(), freq.swigValue(), Date.getCPtr(d1), d1, Date.getCPtr(d2), d2, Date.getCPtr(refStart), refStart, Date.getCPtr(refEnd), refEnd), true);
  }

  public static InterestRate impliedRate(double compound, DayCounter resultDC, Compounding comp, Frequency freq, Date d1, Date d2, Date refStart) {
    return new InterestRate(QuantLibJNI.InterestRate_impliedRate__SWIG_2(compound, DayCounter.getCPtr(resultDC), resultDC, comp.swigValue(), freq.swigValue(), Date.getCPtr(d1), d1, Date.getCPtr(d2), d2, Date.getCPtr(refStart), refStart), true);
  }

  public static InterestRate impliedRate(double compound, DayCounter resultDC, Compounding comp, Frequency freq, Date d1, Date d2) {
    return new InterestRate(QuantLibJNI.InterestRate_impliedRate__SWIG_3(compound, DayCounter.getCPtr(resultDC), resultDC, comp.swigValue(), freq.swigValue(), Date.getCPtr(d1), d1, Date.getCPtr(d2), d2), true);
  }

  public InterestRate equivalentRate(Compounding comp, Frequency freq, double t) {
    return new InterestRate(QuantLibJNI.InterestRate_equivalentRate__SWIG_0(swigCPtr, this, comp.swigValue(), freq.swigValue(), t), true);
  }

  public InterestRate equivalentRate(DayCounter resultDayCounter, Compounding comp, Frequency freq, Date d1, Date d2, Date refStart, Date refEnd) {
    return new InterestRate(QuantLibJNI.InterestRate_equivalentRate__SWIG_1(swigCPtr, this, DayCounter.getCPtr(resultDayCounter), resultDayCounter, comp.swigValue(), freq.swigValue(), Date.getCPtr(d1), d1, Date.getCPtr(d2), d2, Date.getCPtr(refStart), refStart, Date.getCPtr(refEnd), refEnd), true);
  }

  public InterestRate equivalentRate(DayCounter resultDayCounter, Compounding comp, Frequency freq, Date d1, Date d2, Date refStart) {
    return new InterestRate(QuantLibJNI.InterestRate_equivalentRate__SWIG_2(swigCPtr, this, DayCounter.getCPtr(resultDayCounter), resultDayCounter, comp.swigValue(), freq.swigValue(), Date.getCPtr(d1), d1, Date.getCPtr(d2), d2, Date.getCPtr(refStart), refStart), true);
  }

  public InterestRate equivalentRate(DayCounter resultDayCounter, Compounding comp, Frequency freq, Date d1, Date d2) {
    return new InterestRate(QuantLibJNI.InterestRate_equivalentRate__SWIG_3(swigCPtr, this, DayCounter.getCPtr(resultDayCounter), resultDayCounter, comp.swigValue(), freq.swigValue(), Date.getCPtr(d1), d1, Date.getCPtr(d2), d2), true);
  }

  public String toString() {
    return QuantLibJNI.InterestRate_toString(swigCPtr, this);
  }

}

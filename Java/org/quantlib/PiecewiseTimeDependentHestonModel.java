/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

public class PiecewiseTimeDependentHestonModel extends CalibratedModel {
  private transient long swigCPtr;

  protected PiecewiseTimeDependentHestonModel(long cPtr, boolean cMemoryOwn) {
    super(QuantLibJNI.PiecewiseTimeDependentHestonModel_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PiecewiseTimeDependentHestonModel obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        QuantLibJNI.delete_PiecewiseTimeDependentHestonModel(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public PiecewiseTimeDependentHestonModel(YieldTermStructureHandle riskFreeRate, YieldTermStructureHandle dividendYield, QuoteHandle s0, double v0, Parameter theta, Parameter kappa, Parameter sigma, Parameter rho, TimeGrid timeGrid) {
    this(QuantLibJNI.new_PiecewiseTimeDependentHestonModel(YieldTermStructureHandle.getCPtr(riskFreeRate), riskFreeRate, YieldTermStructureHandle.getCPtr(dividendYield), dividendYield, QuoteHandle.getCPtr(s0), s0, v0, Parameter.getCPtr(theta), theta, Parameter.getCPtr(kappa), kappa, Parameter.getCPtr(sigma), sigma, Parameter.getCPtr(rho), rho, TimeGrid.getCPtr(timeGrid), timeGrid), true);
  }

  public double theta(double t) {
    return QuantLibJNI.PiecewiseTimeDependentHestonModel_theta(swigCPtr, this, t);
  }

  public double kappa(double t) {
    return QuantLibJNI.PiecewiseTimeDependentHestonModel_kappa(swigCPtr, this, t);
  }

  public double sigma(double t) {
    return QuantLibJNI.PiecewiseTimeDependentHestonModel_sigma(swigCPtr, this, t);
  }

  public double rho(double t) {
    return QuantLibJNI.PiecewiseTimeDependentHestonModel_rho(swigCPtr, this, t);
  }

  public double v0() {
    return QuantLibJNI.PiecewiseTimeDependentHestonModel_v0(swigCPtr, this);
  }

  public double s0() {
    return QuantLibJNI.PiecewiseTimeDependentHestonModel_s0(swigCPtr, this);
  }

  public TimeGrid timeGrid() {
    return new TimeGrid(QuantLibJNI.PiecewiseTimeDependentHestonModel_timeGrid(swigCPtr, this), false);
  }

  public YieldTermStructureHandle dividendYield() {
    return new YieldTermStructureHandle(QuantLibJNI.PiecewiseTimeDependentHestonModel_dividendYield(swigCPtr, this), false);
  }

  public YieldTermStructureHandle riskFreeRate() {
    return new YieldTermStructureHandle(QuantLibJNI.PiecewiseTimeDependentHestonModel_riskFreeRate(swigCPtr, this), false);
  }

}

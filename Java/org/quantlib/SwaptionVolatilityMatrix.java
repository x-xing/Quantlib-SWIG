/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

public class SwaptionVolatilityMatrix extends SwaptionVolatilityStructure {
  private transient long swigCPtr;

  protected SwaptionVolatilityMatrix(long cPtr, boolean cMemoryOwn) {
    super(QuantLibJNI.SwaptionVolatilityMatrix_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SwaptionVolatilityMatrix obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        QuantLibJNI.delete_SwaptionVolatilityMatrix(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public SwaptionVolatilityMatrix(Date referenceDate, DateVector dates, PeriodVector lengths, Matrix vols, DayCounter dayCounter, boolean flatExtrapolation, VolatilityType type, Matrix shifts) {
    this(QuantLibJNI.new_SwaptionVolatilityMatrix__SWIG_0(Date.getCPtr(referenceDate), referenceDate, DateVector.getCPtr(dates), dates, PeriodVector.getCPtr(lengths), lengths, Matrix.getCPtr(vols), vols, DayCounter.getCPtr(dayCounter), dayCounter, flatExtrapolation, type.swigValue(), Matrix.getCPtr(shifts), shifts), true);
  }

  public SwaptionVolatilityMatrix(Date referenceDate, DateVector dates, PeriodVector lengths, Matrix vols, DayCounter dayCounter, boolean flatExtrapolation, VolatilityType type) {
    this(QuantLibJNI.new_SwaptionVolatilityMatrix__SWIG_1(Date.getCPtr(referenceDate), referenceDate, DateVector.getCPtr(dates), dates, PeriodVector.getCPtr(lengths), lengths, Matrix.getCPtr(vols), vols, DayCounter.getCPtr(dayCounter), dayCounter, flatExtrapolation, type.swigValue()), true);
  }

  public SwaptionVolatilityMatrix(Date referenceDate, DateVector dates, PeriodVector lengths, Matrix vols, DayCounter dayCounter, boolean flatExtrapolation) {
    this(QuantLibJNI.new_SwaptionVolatilityMatrix__SWIG_2(Date.getCPtr(referenceDate), referenceDate, DateVector.getCPtr(dates), dates, PeriodVector.getCPtr(lengths), lengths, Matrix.getCPtr(vols), vols, DayCounter.getCPtr(dayCounter), dayCounter, flatExtrapolation), true);
  }

  public SwaptionVolatilityMatrix(Date referenceDate, DateVector dates, PeriodVector lengths, Matrix vols, DayCounter dayCounter) {
    this(QuantLibJNI.new_SwaptionVolatilityMatrix__SWIG_3(Date.getCPtr(referenceDate), referenceDate, DateVector.getCPtr(dates), dates, PeriodVector.getCPtr(lengths), lengths, Matrix.getCPtr(vols), vols, DayCounter.getCPtr(dayCounter), dayCounter), true);
  }

  public SwaptionVolatilityMatrix(Calendar calendar, BusinessDayConvention bdc, PeriodVector optionTenors, PeriodVector swapTenors, QuoteHandleVectorVector vols, DayCounter dayCounter, boolean flatExtrapolation, VolatilityType type, SWIGTYPE_p_std__vectorT_std__vectorT_double_t_t shifts) {
    this(QuantLibJNI.new_SwaptionVolatilityMatrix__SWIG_4(Calendar.getCPtr(calendar), calendar, bdc.swigValue(), PeriodVector.getCPtr(optionTenors), optionTenors, PeriodVector.getCPtr(swapTenors), swapTenors, QuoteHandleVectorVector.getCPtr(vols), vols, DayCounter.getCPtr(dayCounter), dayCounter, flatExtrapolation, type.swigValue(), SWIGTYPE_p_std__vectorT_std__vectorT_double_t_t.getCPtr(shifts)), true);
  }

  public SwaptionVolatilityMatrix(Calendar calendar, BusinessDayConvention bdc, PeriodVector optionTenors, PeriodVector swapTenors, QuoteHandleVectorVector vols, DayCounter dayCounter, boolean flatExtrapolation, VolatilityType type) {
    this(QuantLibJNI.new_SwaptionVolatilityMatrix__SWIG_5(Calendar.getCPtr(calendar), calendar, bdc.swigValue(), PeriodVector.getCPtr(optionTenors), optionTenors, PeriodVector.getCPtr(swapTenors), swapTenors, QuoteHandleVectorVector.getCPtr(vols), vols, DayCounter.getCPtr(dayCounter), dayCounter, flatExtrapolation, type.swigValue()), true);
  }

  public SwaptionVolatilityMatrix(Calendar calendar, BusinessDayConvention bdc, PeriodVector optionTenors, PeriodVector swapTenors, QuoteHandleVectorVector vols, DayCounter dayCounter, boolean flatExtrapolation) {
    this(QuantLibJNI.new_SwaptionVolatilityMatrix__SWIG_6(Calendar.getCPtr(calendar), calendar, bdc.swigValue(), PeriodVector.getCPtr(optionTenors), optionTenors, PeriodVector.getCPtr(swapTenors), swapTenors, QuoteHandleVectorVector.getCPtr(vols), vols, DayCounter.getCPtr(dayCounter), dayCounter, flatExtrapolation), true);
  }

  public SwaptionVolatilityMatrix(Calendar calendar, BusinessDayConvention bdc, PeriodVector optionTenors, PeriodVector swapTenors, QuoteHandleVectorVector vols, DayCounter dayCounter) {
    this(QuantLibJNI.new_SwaptionVolatilityMatrix__SWIG_7(Calendar.getCPtr(calendar), calendar, bdc.swigValue(), PeriodVector.getCPtr(optionTenors), optionTenors, PeriodVector.getCPtr(swapTenors), swapTenors, QuoteHandleVectorVector.getCPtr(vols), vols, DayCounter.getCPtr(dayCounter), dayCounter), true);
  }

  public SwaptionVolatilityMatrix(Calendar calendar, BusinessDayConvention bdc, PeriodVector optionTenors, PeriodVector swapTenors, Matrix vols, DayCounter dayCounter, boolean flatExtrapolation, VolatilityType type, Matrix shifts) {
    this(QuantLibJNI.new_SwaptionVolatilityMatrix__SWIG_8(Calendar.getCPtr(calendar), calendar, bdc.swigValue(), PeriodVector.getCPtr(optionTenors), optionTenors, PeriodVector.getCPtr(swapTenors), swapTenors, Matrix.getCPtr(vols), vols, DayCounter.getCPtr(dayCounter), dayCounter, flatExtrapolation, type.swigValue(), Matrix.getCPtr(shifts), shifts), true);
  }

  public SwaptionVolatilityMatrix(Calendar calendar, BusinessDayConvention bdc, PeriodVector optionTenors, PeriodVector swapTenors, Matrix vols, DayCounter dayCounter, boolean flatExtrapolation, VolatilityType type) {
    this(QuantLibJNI.new_SwaptionVolatilityMatrix__SWIG_9(Calendar.getCPtr(calendar), calendar, bdc.swigValue(), PeriodVector.getCPtr(optionTenors), optionTenors, PeriodVector.getCPtr(swapTenors), swapTenors, Matrix.getCPtr(vols), vols, DayCounter.getCPtr(dayCounter), dayCounter, flatExtrapolation, type.swigValue()), true);
  }

  public SwaptionVolatilityMatrix(Calendar calendar, BusinessDayConvention bdc, PeriodVector optionTenors, PeriodVector swapTenors, Matrix vols, DayCounter dayCounter, boolean flatExtrapolation) {
    this(QuantLibJNI.new_SwaptionVolatilityMatrix__SWIG_10(Calendar.getCPtr(calendar), calendar, bdc.swigValue(), PeriodVector.getCPtr(optionTenors), optionTenors, PeriodVector.getCPtr(swapTenors), swapTenors, Matrix.getCPtr(vols), vols, DayCounter.getCPtr(dayCounter), dayCounter, flatExtrapolation), true);
  }

  public SwaptionVolatilityMatrix(Calendar calendar, BusinessDayConvention bdc, PeriodVector optionTenors, PeriodVector swapTenors, Matrix vols, DayCounter dayCounter) {
    this(QuantLibJNI.new_SwaptionVolatilityMatrix__SWIG_11(Calendar.getCPtr(calendar), calendar, bdc.swigValue(), PeriodVector.getCPtr(optionTenors), optionTenors, PeriodVector.getCPtr(swapTenors), swapTenors, Matrix.getCPtr(vols), vols, DayCounter.getCPtr(dayCounter), dayCounter), true);
  }

}

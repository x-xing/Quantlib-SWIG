/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

public class _Exercise {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected _Exercise(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(_Exercise obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        QuantLibJNI.delete__Exercise(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public _Exercise.Type type() {
    return _Exercise.Type.swigToEnum(QuantLibJNI._Exercise_type(swigCPtr, this));
  }

  public DateVector dates() {
    return new DateVector(QuantLibJNI._Exercise_dates(swigCPtr, this), false);
  }

  public Date lastDate() {
    return new Date(QuantLibJNI._Exercise_lastDate(swigCPtr, this), true);
  }

  public final static class Type {
    public final static _Exercise.Type American = new _Exercise.Type("American");
    public final static _Exercise.Type Bermudan = new _Exercise.Type("Bermudan");
    public final static _Exercise.Type European = new _Exercise.Type("European");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Type swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Type.class + " with value " + swigValue);
    }

    private Type(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Type(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Type(String swigName, Type swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Type[] swigValues = { American, Bermudan, European };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}

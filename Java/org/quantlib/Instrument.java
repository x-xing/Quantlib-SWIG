/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

public class Instrument {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Instrument(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Instrument obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        QuantLibJNI.delete_Instrument(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public SWIGTYPE_p_Instrument __deref__() {
    long cPtr = QuantLibJNI.Instrument___deref__(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Instrument(cPtr, false);
  }

  public boolean isNull() {
    return QuantLibJNI.Instrument_isNull(swigCPtr, this);
  }

  public Observable asObservable() {
    return new Observable(QuantLibJNI.Instrument_asObservable(swigCPtr, this), true);
  }

  public Instrument() {
    this(QuantLibJNI.new_Instrument(), true);
  }

  public double NPV() {
    return QuantLibJNI.Instrument_NPV(swigCPtr, this);
  }

  public double errorEstimate() {
    return QuantLibJNI.Instrument_errorEstimate(swigCPtr, this);
  }

  public boolean isExpired() {
    return QuantLibJNI.Instrument_isExpired(swigCPtr, this);
  }

  public void setPricingEngine(PricingEngine arg0) {
    QuantLibJNI.Instrument_setPricingEngine(swigCPtr, this, PricingEngine.getCPtr(arg0), arg0);
  }

  public void recalculate() {
    QuantLibJNI.Instrument_recalculate(swigCPtr, this);
  }

  public void freeze() {
    QuantLibJNI.Instrument_freeze(swigCPtr, this);
  }

  public void unfreeze() {
    QuantLibJNI.Instrument_unfreeze(swigCPtr, this);
  }

}

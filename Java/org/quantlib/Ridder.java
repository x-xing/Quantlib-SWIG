/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.quantlib;

public class Ridder {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Ridder(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Ridder obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        QuantLibJNI.delete_Ridder(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setMaxEvaluations(long evaluations) {
    QuantLibJNI.Ridder_setMaxEvaluations(swigCPtr, this, evaluations);
  }

  public void setLowerBound(double lowerBound) {
    QuantLibJNI.Ridder_setLowerBound(swigCPtr, this, lowerBound);
  }

  public void setUpperBound(double upperBound) {
    QuantLibJNI.Ridder_setUpperBound(swigCPtr, this, upperBound);
  }

  public double solve(UnaryFunctionDelegate function, double xAccuracy, double guess, double step) {
    return QuantLibJNI.Ridder_solve__SWIG_0(swigCPtr, this, UnaryFunctionDelegate.getCPtr(function), function, xAccuracy, guess, step);
  }

  public double solve(UnaryFunctionDelegate function, double xAccuracy, double guess, double xMin, double xMax) {
    return QuantLibJNI.Ridder_solve__SWIG_1(swigCPtr, this, UnaryFunctionDelegate.getCPtr(function), function, xAccuracy, guess, xMin, xMax);
  }

  public Ridder() {
    this(QuantLibJNI.new_Ridder(), true);
  }

}
